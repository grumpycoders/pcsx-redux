name: Linux CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/grumpycoders/pcsx-redux-build:latest
      env:
        TEST_RESULTS: /tmp/test-results
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          set-safe-directory: true
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          wget https://github.com/JonathanDotCel/unirom8_bootdisc_and_firmware_for_ps1/releases/download/8.0.K/UNIROM_BOOTDISC_8.0.K.zip
      - run: |
          unzip -o UNIROM_BOOTDISC_8.0.K.zip
      - run: |
          make -j 2 all pcsx-redux-tests tools
          make -C src/mips/openbios -j 2
          cp src/mips/openbios/openbios.bin .
      - name: Packaging
        run: |
          git config --global --add safe.directory /__w/pcsx-redux/pcsx-redux
          make install install-openbios DESTDIR=AppDir/usr
          echo '{' > AppDir/usr/share/pcsx-redux/resources/version.json
          echo '  "version": "'`git rev-parse HEAD | cut -c 1-8`'",' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '  "changeset": "'`git rev-parse HEAD`'",' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '  "timestamp": '`date '+%s'`',' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '  "channel": "dev",' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '  "updateInfo": [' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '    {' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '      "channel": "dev",' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '      "method": "appcenter",' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '      "updateCatalog": "https://install.appcenter.ms/api/v0.1/apps/grumpycoders/pcsx-redux-linux64/distribution_groups/public/public_releases",' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '      "updateInfoBase": "https://install.appcenter.ms/api/v0.1/apps/grumpycoders/pcsx-redux-linux64/distribution_groups/public/releases/"' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '    }' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '  ]' >> AppDir/usr/share/pcsx-redux/resources/version.json
          echo '}' >> AppDir/usr/share/pcsx-redux/resources/version.json
          appimage-builder --skip-tests
      - run: |
          make -C src/mips/openbios clean
          make -C src/mips/tests -j 2 PCSX_TESTS=true
          cp ./openbios.bin src/mips/openbios/
      - run: |
          xvfb-run catchsegv ./pcsx-redux -stdout -lua_stdout -testmode -no-gui-logs -iso UNIROM_BOOTDISC_8.0.K.bin -exec "dofile 'src/mips/tests/cdrom/create-test-iso.lua'"
      - name: Test
        run: |
          export GTEST_OUTPUT=xml:${TEST_RESULTS}/
          mkdir -p $TEST_RESULTS
          xvfb-run catchsegv ./pcsx-redux-tests
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
      - name: Deploy
        if: github.event_name == 'push'
        env:
          APPDISTRIB_TOKEN: ${{ secrets.APPDISTRIB_DEV_LINUX_X64 }}
          APPDISTRIB_ORGANIZATION: pcsx-redux
          APPDISTRIB_PROJECT: dev-linux-x64
          APPCENTER_ACCESS_TOKEN: ${{ secrets.LINUX_APPCENTER_ACCESS_TOKEN }}
        run: |
          git config --global --add safe.directory /__w/pcsx-redux/pcsx-redux
          export BUILD=`git rev-parse HEAD | cut -c 1-8`
          zip PCSX-Redux-$BUILD-linux-x86_64.zip *.AppImage
          npx @appdistrib/cli -m AppDir/usr/share/pcsx-redux/resources/version.json upload PCSX-Redux-$BUILD-linux-x86_64.zip
          npx appcenter-cli distribute release -b $BUILD -f PCSX-Redux-$BUILD-linux-x86_64.zip -g public -a grumpycoders/pcsx-redux-linux64 --disable-telemetry
